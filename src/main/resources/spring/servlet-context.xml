<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/websocket 
        http://www.springframework.org/schema/websocket/spring-websocket.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<context:component-scan base-package="com.greit.weys">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/html/**" location="/html/" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/api/**" />
			<bean class="com.greit.weys.config.Interceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<task:scheduler id="myScheduler" pool-size="10" />
	<task:annotation-driven scheduler="myScheduler" />

	<!-- jsonView setting -->
	<beans:bean
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"
		id="jsonView" />

	<!-- multipart resolver -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- 다국어 메세지 설정 -->
	<!-- <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" /> -->
<!-- 	<bean class="com.greit.weys.HomeController"> -->
<!-- 		<property name="localeResolver" ref="localeResolver" /> -->
<!-- 	</bean> -->

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:message/message" />
		<beans:property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="180" />
	</beans:bean>

	<bean id="beanNameViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="1"></bean>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value="2" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="help@weys.exchange" />
		<beans:property name="password" value="rhdgkdghkswjs1!" />
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.mime.charset">UTF-8</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="mailer" class="com.greit.weys.mail.Mailer"></beans:bean>
	<beans:bean id="email" class="com.greit.weys.mail.EmailVO"></beans:bean>
	
	<beans:bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<beans:property name="velocityProperties">
			<beans:props>
				<beans:prop key="input.encoding">UTF-8</beans:prop>
				<beans:prop key="output.encoding">UTF-8</beans:prop>
				<beans:prop key="response.encoding">UTF-8</beans:prop>
				<beans:prop key="resource.loader">class</beans:prop>
				<beans:prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:/properties/global.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<beans:property name="corePoolSize" value="5" />
		<beans:property name="maxPoolSize" value="10" />
		<beans:property name="waitForTasksToCompleteOnShutdown"
			value="true" />
	</beans:bean>

	<!-- <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> -->
	<beans:bean id="dataSource"
		class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<beans:property name="driver" value="${MYSQL.DRIVER}" />
		<beans:property name="url" value="${MYSQL.URL}" />
		<beans:property name="username" value="${MYSQL.NAME}" />
		<beans:property name="password" value="${MYSQL.PWD}" />
		<beans:property name="poolPingEnabled" value="true" />
		<beans:property name="poolPingQuery" value="select 1" />
		<beans:property name="poolPingConnectionsNotUsedFor"
			value="43200" />
		<beans:property name="poolTimeToWait" value="30000" />
	</beans:bean>


	<!-- mybatis 설정 및 mapper 경로 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:mybatis/config/mybatis-config.xml" /><!-- 설정 경로 -->
		<beans:property name="mapperLocations" value="classpath:mybatis/sqlmap/*.xml" />			  <!-- mapper 경로 -->
	</beans:bean>

	<!-- mybatis Mapper scan package 경로 설정 -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage" value="com.greit.weys" />
		<beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</beans:bean>

	<!-- spring mybatis sessionTemplate 설정 -->
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate"
		id="sqlSession">
		<beans:constructor-arg ref="sqlSessionFactory"
			index="0" />
	</beans:bean>

	<!-- mybatis 설정 종료 -->

	<!-- was jndi datasource 를 spring transaction manager에 맵핑 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- transaction manager에 advice 설정 아래의pointcut에서 모든 Service가 포함된 메소드 중 
		insert, update, delete, modify등 아래의 method에 정의된 함수에서 Exception발생시 롤백 실행 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" rollback-for="Exception"
				propagation="REQUIRED" /><!-- insert* 함수에서 Exception발생시 롤백 -->
			<tx:method name="update*" rollback-for="Exception"
				propagation="REQUIRED" /><!-- update* 함수에서 Exception발생시 롤백 -->
			<tx:method name="delete*" rollback-for="Exception"
				propagation="REQUIRED" /><!-- delete* 함수에서 Exception발생시 롤백 -->
			<tx:method name="modify*" rollback-for="Exception"
				propagation="REQUIRED" /><!-- modify* 함수에서 Exception발생시 롤백 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- advice의 aop pointcut 설정 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))" /><!-- 
			모든 Service가 포함된 메소드 -->
	</aop:config>
	<!-- Transaction 설정 종료 -->

</beans>
